{"version":3,"sources":["webpack:///./src/containers/Home/home.reducers.js","webpack:///./src sync ^.*\\.reducers.js","webpack:///./src/containers/Home/home.scss","webpack:///./src/utils/authorizationToken.js","webpack:///./src/configureStore.js","webpack:///./src/containers/Home/Home.js","webpack:///./src/containers/Home/home.actions.js","webpack:///./src/containers/Home/HomeWithData.js","webpack:///./src/routes.js","webpack:///./src/App.js","webpack:///./src/root.js","webpack:///./src/createApolloClient.js","webpack:///./src/index.js","webpack:///./src/baseUrls.js","webpack:///./src/containers/Home/home.actionTypes.js"],"names":["initialState","leftSidebar","userLocation","__webpack_exports__","state","arguments","length","undefined","action","type","_home_actionTypes__WEBPACK_IMPORTED_MODULE_0__","payload","_extends","map","./containers/Home/home.reducers.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Container","src_configureStore","reducers","context","forEach","key","split","pop","replace","default","reducer","redux","middleware","es","Home_Home","_Component","Home","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","_inherits","react","_createClass","value","props","getUserLocation","toggleLeftSidebar","_props","console","log","react_default","a","createElement","className","home_default","propTypes","prop_types_default","bool","object","func","containers_Home_Home","apiEndPoint","HomeWithData","react_redux_es","home","dispatch","home_actionTypes","home_actions_toggleLeftSidebar","axios_default","get","then","response","data","Promise","catch","error","country","routes","Switch","Route","exact","path","component","src_App","root_Root","_ref","store","client","react_apollo_browser_umd","BrowserRouter","isRequired","httpLink","middlewareLink","cache","RootComponent","root","src_client","apollo_link_http_lib","uri","getBaseUrl","lib","operation","forward","token","localStorage","getItem","setContext","headers","authorization","inMemoryCache","dataIdFromObject","result","__typename","apollo_client","link","concat","restore","window","__APOLLO_STATE__","src_store","react_dom_default","render","document","getElementById","TOGGLE_LEFT_SIDEBAR","GET_USER_LOCATION_SUCCESS","GET_USER_LOCATION_FAILURE"],"mappings":"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","file":"js/main.0f72bb0d.js","sourcesContent":["import * as ACTIONS from './home.actionTypes';\n\nconst initialState = {\n  leftSidebar: false,\n  userLocation: null\n};\n\nconst home = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS.TOGGLE_LEFT_SIDEBAR: {\n      const leftSidebar = action.payload;\n      return {\n        ...state,\n        leftSidebar\n      };\n    }\n    case ACTIONS.GET_USER_LOCATION_SUCCESS:\n      return {\n        ...state,\n        userLocation: action.payload,\n      };\n    case ACTIONS.GET_USER_LOCATION_FAILURE:\n      return {\n        ...state,\n        userLocation: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default home;\n","var map = {\n\t\"./containers/Home/home.reducers.js\": 113\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 114;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"home_Container_3c4gRNn\"};","const authToken = 'token';\n\nlet token;\n\nexport const getToken = () => {\n  token = localStorage.getItem(authToken);\n  return token;\n};\n\nexport const signIn = (newToken) => {\n  token = newToken;\n  return localStorage.setItem(authToken, newToken);\n};\n\nexport const signOut = () => {\n  token = undefined;\n  return localStorage.removeItem(authToken);\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst configureStore = () => {\n\n  /*\n  * Use webpack's 'require.context' to traverse the project and grab all *.reducers.js files\n  * Reducers can be located next to their related files\n  */\n  const reducers = {};\n  const context = require.context('./', true, /^.*\\.reducers.js/);\n  context.keys().forEach((key) => {\n    reducers[key.split('/').pop().replace('.reducers.js', '')] = context(key).default;\n  });\n\n  const reducer = combineReducers(reducers);\n  const middleware = applyMiddleware(thunk);\n\n  let store;\n  if (process.env.NODE_ENV === 'development' && typeof window.__REDUX_DEVTOOLS_EXTENSION__ === 'function') {\n    // Redux DevTools browser extension support\n    store = createStore(\n      reducer,\n      compose(middleware, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n    );\n  }\n  else {\n    store = createStore(reducer, compose(middleware));\n  }\n\n  if (module.hot) {\n    module.hot.accept(context.id, () => {\n      const reloadedContext = require.context('./', true, /^.*\\.reducers.js/);\n      reloadedContext.keys().forEach((key) => {\n        reducers[key.split('/').pop().replace('.reducers.js', '')] = reloadedContext(key).default;\n      });\n      store.replaceReducer(combineReducers(reducers));\n    });\n  }\n\n  return store;\n};\n\nexport default configureStore;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './home.scss';\n\nexport class Home extends Component {\n  componentDidMount() {\n    this.props.getUserLocation();\n    this.props.toggleLeftSidebar(true);\n  }\n\n  render() {\n\n    const {\n      leftSidebar,\n      userLocation\n    } = this.props;\n\n    console.log(userLocation);\n    console.log(leftSidebar);\n\n    return (\n      <div className={styles.Container}>\n        sdsdsd\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  leftSidebar: PropTypes.bool,\n  userLocation: PropTypes.object,\n  getUserLocation: PropTypes.func,\n  toggleLeftSidebar: PropTypes.func\n};\n\nexport default Home;\n","import axios from 'axios';\n\nimport * as ACTIONS from './home.actionTypes';\n\nexport const toggleLeftSidebar = value => ({\n  type: ACTIONS.TOGGLE_LEFT_SIDEBAR,\n  payload: value\n});\n\nexport const apiEndPoint = 'https://freegeoip.net/json/';\n\nexport function getUserLocation() {\n  return dispatch => (\n    axios.get(apiEndPoint)\n      .then((response) => {\n        dispatch({\n          type: ACTIONS.GET_USER_LOCATION_SUCCESS,\n          payload: response.data\n        });\n        return Promise.resolve();\n      })\n      .catch((error) => {\n        dispatch({\n          type: ACTIONS.GET_USER_LOCATION_FAILURE,\n          payload: {\n            country: 'AU'\n          }\n        });\n        return error;\n      })\n  );\n}\n","import { connect } from 'react-redux';\n\nimport HomeComponent from './Home';\nimport * as homeActions from './home.actions';\n\nexport default connect(\n  state => ({\n    leftSidebar: state.home.leftSidebar,\n    userLocation: state.home.userLocation\n  }),\n  dispatch => ({\n    toggleLeftSidebar: value => dispatch(homeActions.toggleLeftSidebar(value)),\n    getUserLocation: () => dispatch(homeActions.getUserLocation())\n  })\n)(HomeComponent);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport HomeWithData from 'containers/Home/HomeWithData';\n\nconst Routes = () => (\n  <Switch>\n    <Route\n      exact\n      path=\"/\"\n      component={HomeWithData}\n    />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './routes';\n\nconst App = () => (\n  <div>\n    <Routes />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nconst Root = ({\n  store,\n  client\n}) => (\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </ApolloProvider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default Root;\n","/* eslint-disable */\n// import { ApolloClient } from 'react-apollo';\n// import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';\n// import { mockNetworkInterfaceWithSchema } from 'apollo-test-utils';\n//\n// import { typeDefs } from './graphql/schema';\n// import mocks from './graphql/mocks';\n//\n// export default () => {\n//   const schema = makeExecutableSchema({ typeDefs });\n//\n//   addMockFunctionsToSchema({\n//     schema,\n//     mocks\n//   });\n//\n//   const networkInterface = mockNetworkInterfaceWithSchema({ schema });\n//\n//   // const networkInterface = createNetworkInterface({\n//   //   uri: '/graphql',\n//   //   opts: {\n//   //     credentials: 'include',\n//   //   },\n//   // });\n//\n//   const client = new ApolloClient({ networkInterface });\n//\n//   return client;\n// };\n\nimport ApolloClient from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { getGraphqlEndpoint } from 'baseUrls';\nimport { getToken } from 'utils/authorizationToken';\n\nexport default () => {\n\n  const httpLink = createHttpLink({\n    uri: getGraphqlEndpoint()\n  });\n\n  const middlewareLink = new ApolloLink((operation, forward) => {\n    const token = getToken();\n    operation.setContext({\n      headers: {\n        authorization:  token ? token : null\n      }\n    });\n    return forward(operation)\n  });\n\n  const cache = new InMemoryCache({\n    dataIdFromObject: (result) => {\n      if (result.id && result.__typename) {\n        return `${result.__typename}:${result.id}`;\n      }\n      return null;\n    }\n  });\n\n  const client = new ApolloClient({\n    link: middlewareLink.concat(httpLink),\n    cache: cache.restore(window.__APOLLO_STATE__ || {})\n  });\n\n  return client;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createApolloClient from './createApolloClient';\n\nimport configureStore from './configureStore';\nimport Root from './root';\n\nconst client = createApolloClient();\nconst store = configureStore();\n\nconst render = (RootComponent) => {\n  ReactDOM.render(<RootComponent store={store} client={client} />, document.getElementById('root'));\n};\n\nrender(Root);\n\nif (module.hot) {\n  module.hot.accept('./root.js', () => {\n    const NextRoot = require('./root.js').default;\n    setTimeout(\n      () => {\n        render(NextRoot);\n      },\n      0\n    );\n  });\n}\n","export function getBaseUrl() {\n  return process.env.APP_URL || 'http://localhost:8000';\n}\n\nexport function getGraphqlEndpoint() {\n  return `${getBaseUrl()}/graphql`;\n}\n\nexport function setBaseRedirect() {\n  return `${getBaseUrl()}/account/login`;\n}\n","export const TOGGLE_LEFT_SIDEBAR = 'home/TOGGLE_LEFT_SIDEBAR';\nexport const GET_USER_LOCATION_SUCCESS = 'home/GET_USER_LOCATION_SUCCESS';\nexport const GET_USER_LOCATION_FAILURE = 'home/GET_USER_LOCATION_FAILURE';\n"],"sourceRoot":""}